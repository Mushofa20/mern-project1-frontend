{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\react-project-2\\\\frontend\\\\src\\\\components\\\\RegistModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistModal = ({\n  show,\n  handleClose\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !email || !password) {\n      setError('Please fill in all fields!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed. Try again.');\n      }\n      setSuccess('Registration successful!');\n      setError(null); // Clear error\n      setUsername('');\n      setEmail('');\n      setPassword('');\n    } catch (err) {\n      setError(err.message);\n      setSuccess(null); // Clear success\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    dialogClassName: \"custom-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"registerUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Your Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"registerEmail\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Your Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"registerPassword\",\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Your Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"mt-3 w-100\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistModal, \"hOYeSiQ/+ZHfM9iBoTf28a4Vg6k=\");\n_c = RegistModal;\nexport default RegistModal;\nvar _c;\n$RefreshReg$(_c, \"RegistModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","Alert","jsxDEV","_jsxDEV","RegistModal","show","handleClose","_s","username","setUsername","email","setEmail","password","setPassword","error","setError","success","setSuccess","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","onHide","centered","dialogClassName","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","autoFocus","className","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/react-project-2/frontend/src/components/RegistModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nconst RegistModal = ({ show, handleClose }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!username || !email || !password) {\r\n            setError('Please fill in all fields!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, email, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Registration failed. Try again.');\r\n            }\r\n\r\n            setSuccess('Registration successful!');\r\n            setError(null); // Clear error\r\n            setUsername('');\r\n            setEmail('');\r\n            setPassword('');\r\n        } catch (err) {\r\n            setError(err.message);\r\n            setSuccess(null); // Clear success\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} centered dialogClassName='custom-modal'>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Register</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {success && <Alert variant=\"success\">{success}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"registerUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Your Username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            autoFocus\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"registerEmail\" className=\"mt-3\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Your Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"registerPassword\" className=\"mt-3\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"mt-3 w-100\">\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default RegistModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMqB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACZ,QAAQ,IAAI,CAACE,KAAK,IAAI,CAACE,QAAQ,EAAE;MAClCG,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACJ;IAEA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEnB,QAAQ;UAAEE,KAAK;UAAEE;QAAS,CAAC;MACtD,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD;MAEAZ,UAAU,CAAC,0BAA0B,CAAC;MACtCF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChBN,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACVf,QAAQ,CAACe,GAAG,CAACC,OAAO,CAAC;MACrBd,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;EAED,oBACId,OAAA,CAACL,KAAK;IAACO,IAAI,EAAEA,IAAK;IAAC2B,MAAM,EAAE1B,WAAY;IAAC2B,QAAQ;IAACC,eAAe,EAAC,cAAc;IAAAC,QAAA,gBAC3EhC,OAAA,CAACL,KAAK,CAACsC,MAAM;MAACC,WAAW;MAAAF,QAAA,eACrBhC,OAAA,CAACL,KAAK,CAACwC,KAAK;QAAAH,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACfvC,OAAA,CAACL,KAAK,CAAC6C,IAAI;MAAAR,QAAA,GACNrB,KAAK,iBAAIX,OAAA,CAACF,KAAK;QAAC2C,OAAO,EAAC,QAAQ;QAAAT,QAAA,EAAErB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChD1B,OAAO,iBAAIb,OAAA,CAACF,KAAK;QAAC2C,OAAO,EAAC,SAAS;QAAAT,QAAA,EAAEnB;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDvC,OAAA,CAACH,IAAI;QAAC6C,QAAQ,EAAE3B,YAAa;QAAAiB,QAAA,gBACzBhC,OAAA,CAACH,IAAI,CAAC8C,KAAK;UAACC,SAAS,EAAC,kBAAkB;UAAAZ,QAAA,gBACpChC,OAAA,CAACH,IAAI,CAACgD,KAAK;YAAAb,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjCvC,OAAA,CAACH,IAAI,CAACiD,OAAO;YACTC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,qBAAqB;YACjCC,KAAK,EAAE5C,QAAS;YAChB6C,QAAQ,EAAGlC,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAC7CG,SAAS;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACbvC,OAAA,CAACH,IAAI,CAAC8C,KAAK;UAACC,SAAS,EAAC,eAAe;UAACS,SAAS,EAAC,MAAM;UAAArB,QAAA,gBAClDhC,OAAA,CAACH,IAAI,CAACgD,KAAK;YAAAb,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9BvC,OAAA,CAACH,IAAI,CAACiD,OAAO;YACTC,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC,kBAAkB;YAC9BC,KAAK,EAAE1C,KAAM;YACb2C,QAAQ,EAAGlC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACmC,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACbvC,OAAA,CAACH,IAAI,CAAC8C,KAAK;UAACC,SAAS,EAAC,kBAAkB;UAACS,SAAS,EAAC,MAAM;UAAArB,QAAA,gBACrDhC,OAAA,CAACH,IAAI,CAACgD,KAAK;YAAAb,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjCvC,OAAA,CAACH,IAAI,CAACiD,OAAO;YACTC,IAAI,EAAC,UAAU;YACfC,WAAW,EAAC,qBAAqB;YACjCC,KAAK,EAAExC,QAAS;YAChByC,QAAQ,EAAGlC,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACmC,MAAM,CAACF,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACbvC,OAAA,CAACJ,MAAM;UAAC6C,OAAO,EAAC,SAAS;UAACM,IAAI,EAAC,QAAQ;UAACM,SAAS,EAAC,YAAY;UAAArB,QAAA,EAAC;QAE/D;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEhB,CAAC;AAACnC,EAAA,CAnFIH,WAAW;AAAAqD,EAAA,GAAXrD,WAAW;AAqFjB,eAAeA,WAAW;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}